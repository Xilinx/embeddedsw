/**
 * (c) 2013 Xilinx Inc.
 * XREGDB v0.91
 * XREGCHDR v0.15
 *
 * Generated on: 2018-11-11
 *
 * @file: pmc_analog.h
 *
 *
 * This file contains confidential and proprietary information
 * of Xilinx, Inc. and is protected under U.S. and
 * international copyright and other intellectual property
 * laws.
 *
 * DISCLAIMER
 * This disclaimer is not a license and does not grant any
 * rights to the materials distributed herewith. Except as
 * otherwise provided in a valid license issued to you by
 * Xilinx, and to the maximum extent permitted by applicable
 * law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
 * WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
 * AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
 * BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
 * INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
 * (2) Xilinx shall not be liable (whether in contract or tort,
 * including negligence, or under any other theory of
 * liability) for any loss or damage of any kind or nature
 * related to, arising under or in connection with these
 * materials, including for any direct, or any indirect,
 * special, incidental, or consequential loss or damage
 * (including loss of data, profits, goodwill, or any type of
 * loss or damage suffered as a result of any action brought
 * by a third party) even if such damage or loss was
 * reasonably foreseeable or Xilinx had been advised of the
 * possibility of the same.
 *
 * CRITICAL APPLICATIONS
 * Xilinx products are not designed or intended to be fail-
 * safe, or for use in any application requiring fail-safe
 * performance, such as life-support or safety devices or
 * systems, Class III medical devices, nuclear facilities,
 * applications related to the deployment of airbags, or any
 * other applications that could lead to death, personal
 * injury, or severe property or environmental damage
 * (individually and collectively, "Critical
 * Applications"). Customer assumes the sole risk and
 * liability of any use of Xilinx products in Critical
 * Applications, subject only to applicable laws and
 * regulations governing limitations on product liability.
 *
 * THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
 * PART OF THIS FILE AT ALL TIMES.
 *
 * Naming Convention: <MODULE>_<REGISTER>[_<FIELD>[_<DESC>]]
 *     <MODULE>       Module name (e.g. can or usb)
 *     <REGISTER>     Register within the current module
 *     [_<FIELD>]     Bit field within a register
 *     [_<DESC>]      Type of bit field define:
 *         SHIFT:     Least significant bit for the field
 *         WIDTH:     Size of field in bites
 *         MASK:      A masking over a range of bits or a bit to
 *                    be used for setting or clearing
 *
 */

#ifndef _PMC_ANALOG_H_
#define _PMC_ANALOG_H_

#ifdef __cplusplus
extern "C" {
#endif

/**
 * PMC_ANALOG Base Address
 */
#define PMC_ANALOG_BASEADDR      0XF1160000

/**
 * Register: PMC_ANALOG_GD_CTRL
 */
#define PMC_ANALOG_GD_CTRL    ( ( PMC_ANALOG_BASEADDR ) + 0X00000000 )

#define PMC_ANALOG_GD_CTRL_GD1_RST_STATUS_REG_SHIFT   25
#define PMC_ANALOG_GD_CTRL_GD1_RST_STATUS_REG_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD1_RST_STATUS_REG_MASK    0X02000000

#define PMC_ANALOG_GD_CTRL_GD1_FABRIC_GL_EN_SHIFT   24
#define PMC_ANALOG_GD_CTRL_GD1_FABRIC_GL_EN_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD1_FABRIC_GL_EN_MASK    0X01000000

#define PMC_ANALOG_GD_CTRL_GD1_TEST_GLITCH_SEL_SHIFT   19
#define PMC_ANALOG_GD_CTRL_GD1_TEST_GLITCH_SEL_WIDTH   5
#define PMC_ANALOG_GD_CTRL_GD1_TEST_GLITCH_SEL_MASK    0X00F80000

#define PMC_ANALOG_GD_CTRL_GD1_TEST_GLITCH_GEN_SHIFT   18
#define PMC_ANALOG_GD_CTRL_GD1_TEST_GLITCH_GEN_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD1_TEST_GLITCH_GEN_MASK    0X00040000

#define PMC_ANALOG_GD_CTRL_GD1_GL_DET_TEST_MODE_SHIFT   17
#define PMC_ANALOG_GD_CTRL_GD1_GL_DET_TEST_MODE_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD1_GL_DET_TEST_MODE_MASK    0X00020000

#define PMC_ANALOG_GD_CTRL_GD1_EN_GLITCH_DET_B_SHIFT   16
#define PMC_ANALOG_GD_CTRL_GD1_EN_GLITCH_DET_B_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD1_EN_GLITCH_DET_B_MASK    0X00010000

#define PMC_ANALOG_GD_CTRL_GD0_RST_STATUS_REG_SHIFT   9
#define PMC_ANALOG_GD_CTRL_GD0_RST_STATUS_REG_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD0_RST_STATUS_REG_MASK    0X00000200

#define PMC_ANALOG_GD_CTRL_GD0_FABRIC_GL_EN_SHIFT   8
#define PMC_ANALOG_GD_CTRL_GD0_FABRIC_GL_EN_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD0_FABRIC_GL_EN_MASK    0X00000100

#define PMC_ANALOG_GD_CTRL_GD0_TEST_GLITCH_SEL_SHIFT   3
#define PMC_ANALOG_GD_CTRL_GD0_TEST_GLITCH_SEL_WIDTH   5
#define PMC_ANALOG_GD_CTRL_GD0_TEST_GLITCH_SEL_MASK    0X000000F8

#define PMC_ANALOG_GD_CTRL_GD0_TEST_GLITCH_GEN_SHIFT   2
#define PMC_ANALOG_GD_CTRL_GD0_TEST_GLITCH_GEN_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD0_TEST_GLITCH_GEN_MASK    0X00000004

#define PMC_ANALOG_GD_CTRL_GD0_GL_DET_TEST_MODE_SHIFT   1
#define PMC_ANALOG_GD_CTRL_GD0_GL_DET_TEST_MODE_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD0_GL_DET_TEST_MODE_MASK    0X00000002

#define PMC_ANALOG_GD_CTRL_GD0_EN_GLITCH_DET_B_SHIFT   0
#define PMC_ANALOG_GD_CTRL_GD0_EN_GLITCH_DET_B_WIDTH   1
#define PMC_ANALOG_GD_CTRL_GD0_EN_GLITCH_DET_B_MASK    0X00000001

/**
 * Register: PMC_ANALOG_GLITCH_DET_STATUS
 */
#define PMC_ANALOG_GLITCH_DET_STATUS    ( ( PMC_ANALOG_BASEADDR ) + 0X00000004 )

#define PMC_ANALOG_GLITCH_DET_STATUS_VCCINT_PMC_1_SHIFT   1
#define PMC_ANALOG_GLITCH_DET_STATUS_VCCINT_PMC_1_WIDTH   1
#define PMC_ANALOG_GLITCH_DET_STATUS_VCCINT_PMC_1_MASK    0X00000002

#define PMC_ANALOG_GLITCH_DET_STATUS_VCCINT_PMC_0_SHIFT   0
#define PMC_ANALOG_GLITCH_DET_STATUS_VCCINT_PMC_0_WIDTH   1
#define PMC_ANALOG_GLITCH_DET_STATUS_VCCINT_PMC_0_MASK    0X00000001

/**
 * Register: PMC_ANALOG_POR_CTRL
 */
#define PMC_ANALOG_POR_CTRL    ( ( PMC_ANALOG_BASEADDR ) + 0X00000008 )

#define PMC_ANALOG_POR_CTRL_IRO_SLEEP_SHIFT   1
#define PMC_ANALOG_POR_CTRL_IRO_SLEEP_WIDTH   1
#define PMC_ANALOG_POR_CTRL_IRO_SLEEP_MASK    0X00000002

#define PMC_ANALOG_POR_CTRL_CFG_MCLK_OFF_SHIFT   0
#define PMC_ANALOG_POR_CTRL_CFG_MCLK_OFF_WIDTH   1
#define PMC_ANALOG_POR_CTRL_CFG_MCLK_OFF_MASK    0X00000001

/**
 * Register: PMC_ANALOG_VGG_CTRL
 */
#define PMC_ANALOG_VGG_CTRL    ( ( PMC_ANALOG_BASEADDR ) + 0X0000000C )

#define PMC_ANALOG_VGG_CTRL_TEST_VGG_SEL_SHIFT   14
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_SEL_WIDTH   5
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_SEL_MASK    0X0007C000

#define PMC_ANALOG_VGG_CTRL_TEST_REF_SEL_SHIFT   9
#define PMC_ANALOG_VGG_CTRL_TEST_REF_SEL_WIDTH   5
#define PMC_ANALOG_VGG_CTRL_TEST_REF_SEL_MASK    0X00003E00

#define PMC_ANALOG_VGG_CTRL_TEST_VGG_VDD_SEL_SHIFT   7
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_VDD_SEL_WIDTH   2
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_VDD_SEL_MASK    0X00000180

#define PMC_ANALOG_VGG_CTRL_TEST_VGG_VDD_EN_SHIFT   6
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_VDD_EN_WIDTH   1
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_VDD_EN_MASK    0X00000040

#define PMC_ANALOG_VGG_CTRL_TEST_VGG_EN_SHIFT   5
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_EN_WIDTH   1
#define PMC_ANALOG_VGG_CTRL_TEST_VGG_EN_MASK    0X00000020

#define PMC_ANALOG_VGG_CTRL_TEST_NEG_SLOPE_VGG_SHIFT   4
#define PMC_ANALOG_VGG_CTRL_TEST_NEG_SLOPE_VGG_WIDTH   1
#define PMC_ANALOG_VGG_CTRL_TEST_NEG_SLOPE_VGG_MASK    0X00000010

#define PMC_ANALOG_VGG_CTRL_SW_DIS_VGG_REG_SHIFT   1
#define PMC_ANALOG_VGG_CTRL_SW_DIS_VGG_REG_WIDTH   1
#define PMC_ANALOG_VGG_CTRL_SW_DIS_VGG_REG_MASK    0X00000002

#define PMC_ANALOG_VGG_CTRL_EN_VGG_CLAMP_SHIFT   0
#define PMC_ANALOG_VGG_CTRL_EN_VGG_CLAMP_WIDTH   1
#define PMC_ANALOG_VGG_CTRL_EN_VGG_CLAMP_MASK    0X00000001

/**
 * Register: PMC_ANALOG_CFRM_PROBE
 */
#define PMC_ANALOG_CFRM_PROBE    ( ( PMC_ANALOG_BASEADDR ) + 0X00000010 )

#define PMC_ANALOG_CFRM_PROBE_MUX_SELECT_SHIFT   0
#define PMC_ANALOG_CFRM_PROBE_MUX_SELECT_WIDTH   20
#define PMC_ANALOG_CFRM_PROBE_MUX_SELECT_MASK    0X000FFFFF

/**
 * Register: PMC_ANALOG_PMC_SYSMON
 */
#define PMC_ANALOG_PMC_SYSMON    ( ( PMC_ANALOG_BASEADDR ) + 0X00000014 )

#define PMC_ANALOG_PMC_SYSMON_AMS_I2C_SEL_SHIFT   0
#define PMC_ANALOG_PMC_SYSMON_AMS_I2C_SEL_WIDTH   1
#define PMC_ANALOG_PMC_SYSMON_AMS_I2C_SEL_MASK    0X00000001

/**
 * Register: PMC_ANALOG_GD_FUSE_CTRL_0
 */
#define PMC_ANALOG_GD_FUSE_CTRL_0    ( ( PMC_ANALOG_BASEADDR ) + 0X00000020 )

#define PMC_ANALOG_GD_FUSE_CTRL_0_SPARE_SEL_SHIFT   16
#define PMC_ANALOG_GD_FUSE_CTRL_0_SPARE_SEL_WIDTH   4
#define PMC_ANALOG_GD_FUSE_CTRL_0_SPARE_SEL_MASK    0X000F0000

#define PMC_ANALOG_GD_FUSE_CTRL_0_VCCINT_PMC_VAL_SEL_SHIFT   12
#define PMC_ANALOG_GD_FUSE_CTRL_0_VCCINT_PMC_VAL_SEL_WIDTH   3
#define PMC_ANALOG_GD_FUSE_CTRL_0_VCCINT_PMC_VAL_SEL_MASK    0X00007000

#define PMC_ANALOG_GD_FUSE_CTRL_0_DEL_SEL_SHIFT   8
#define PMC_ANALOG_GD_FUSE_CTRL_0_DEL_SEL_WIDTH   4
#define PMC_ANALOG_GD_FUSE_CTRL_0_DEL_SEL_MASK    0X00000F00

#define PMC_ANALOG_GD_FUSE_CTRL_0_COMP_SEL_SHIFT   4
#define PMC_ANALOG_GD_FUSE_CTRL_0_COMP_SEL_WIDTH   2
#define PMC_ANALOG_GD_FUSE_CTRL_0_COMP_SEL_MASK    0X00000030

#define PMC_ANALOG_GD_FUSE_CTRL_0_USE_REG_SHIFT   0
#define PMC_ANALOG_GD_FUSE_CTRL_0_USE_REG_WIDTH   1
#define PMC_ANALOG_GD_FUSE_CTRL_0_USE_REG_MASK    0X00000001

/**
 * Register: PMC_ANALOG_GD_FUSE_CTRL_1
 */
#define PMC_ANALOG_GD_FUSE_CTRL_1    ( ( PMC_ANALOG_BASEADDR ) + 0X00000024 )

#define PMC_ANALOG_GD_FUSE_CTRL_1_SPARE_SEL_SHIFT   16
#define PMC_ANALOG_GD_FUSE_CTRL_1_SPARE_SEL_WIDTH   4
#define PMC_ANALOG_GD_FUSE_CTRL_1_SPARE_SEL_MASK    0X000F0000

#define PMC_ANALOG_GD_FUSE_CTRL_1_VCCINT_PMC_VAL_SEL_SHIFT   12
#define PMC_ANALOG_GD_FUSE_CTRL_1_VCCINT_PMC_VAL_SEL_WIDTH   3
#define PMC_ANALOG_GD_FUSE_CTRL_1_VCCINT_PMC_VAL_SEL_MASK    0X00007000

#define PMC_ANALOG_GD_FUSE_CTRL_1_DEL_SEL_SHIFT   8
#define PMC_ANALOG_GD_FUSE_CTRL_1_DEL_SEL_WIDTH   4
#define PMC_ANALOG_GD_FUSE_CTRL_1_DEL_SEL_MASK    0X00000F00

#define PMC_ANALOG_GD_FUSE_CTRL_1_COMP_SEL_SHIFT   4
#define PMC_ANALOG_GD_FUSE_CTRL_1_COMP_SEL_WIDTH   2
#define PMC_ANALOG_GD_FUSE_CTRL_1_COMP_SEL_MASK    0X00000030

#define PMC_ANALOG_GD_FUSE_CTRL_1_USE_REG_SHIFT   0
#define PMC_ANALOG_GD_FUSE_CTRL_1_USE_REG_WIDTH   1
#define PMC_ANALOG_GD_FUSE_CTRL_1_USE_REG_MASK    0X00000001

/**
 * Register: PMC_ANALOG_CFG_POR_CNT_SKIP
 */
#define PMC_ANALOG_CFG_POR_CNT_SKIP    ( ( PMC_ANALOG_BASEADDR ) + 0X00000030 )

#define PMC_ANALOG_CFG_POR_CNT_SKIP_VAL_SHIFT   0
#define PMC_ANALOG_CFG_POR_CNT_SKIP_VAL_WIDTH   1
#define PMC_ANALOG_CFG_POR_CNT_SKIP_VAL_MASK    0X00000001

/**
 * Register: PMC_ANALOG_PMC_ANLG_ISR
 */
#define PMC_ANALOG_PMC_ANLG_ISR    ( ( PMC_ANALOG_BASEADDR ) + 0X00000040 )

#define PMC_ANALOG_PMC_ANLG_ISR_SLVERR_SHIFT   0
#define PMC_ANALOG_PMC_ANLG_ISR_SLVERR_WIDTH   1
#define PMC_ANALOG_PMC_ANLG_ISR_SLVERR_MASK    0X00000001

/**
 * Register: PMC_ANALOG_PMC_ANLG_IMR
 */
#define PMC_ANALOG_PMC_ANLG_IMR    ( ( PMC_ANALOG_BASEADDR ) + 0X00000044 )

#define PMC_ANALOG_PMC_ANLG_IMR_SLVERR_SHIFT   0
#define PMC_ANALOG_PMC_ANLG_IMR_SLVERR_WIDTH   1
#define PMC_ANALOG_PMC_ANLG_IMR_SLVERR_MASK    0X00000001

/**
 * Register: PMC_ANALOG_PMC_ANLG_IER
 */
#define PMC_ANALOG_PMC_ANLG_IER    ( ( PMC_ANALOG_BASEADDR ) + 0X00000048 )

#define PMC_ANALOG_PMC_ANLG_IER_SLVERR_SHIFT   0
#define PMC_ANALOG_PMC_ANLG_IER_SLVERR_WIDTH   1
#define PMC_ANALOG_PMC_ANLG_IER_SLVERR_MASK    0X00000001

/**
 * Register: PMC_ANALOG_PMC_ANLG_IDR
 */
#define PMC_ANALOG_PMC_ANLG_IDR    ( ( PMC_ANALOG_BASEADDR ) + 0X0000004C )

#define PMC_ANALOG_PMC_ANLG_IDR_SLVERR_SHIFT   0
#define PMC_ANALOG_PMC_ANLG_IDR_SLVERR_WIDTH   1
#define PMC_ANALOG_PMC_ANLG_IDR_SLVERR_MASK    0X00000001

/**
 * Register: PMC_ANALOG_SLVERR_CTRL
 */
#define PMC_ANALOG_SLVERR_CTRL    ( ( PMC_ANALOG_BASEADDR ) + 0X00000050 )

#define PMC_ANALOG_SLVERR_CTRL_ENABLE_SHIFT   0
#define PMC_ANALOG_SLVERR_CTRL_ENABLE_WIDTH   1
#define PMC_ANALOG_SLVERR_CTRL_ENABLE_MASK    0X00000001

/**
 * Register: PMC_ANALOG_PMC_ANLG_ECO_0
 */
#define PMC_ANALOG_PMC_ANLG_ECO_0    ( ( PMC_ANALOG_BASEADDR ) + 0X00000100 )

#define PMC_ANALOG_PMC_ANLG_ECO_0_ECO_SHIFT   0
#define PMC_ANALOG_PMC_ANLG_ECO_0_ECO_WIDTH   32
#define PMC_ANALOG_PMC_ANLG_ECO_0_ECO_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_PMC_ANLG_ECO_1
 */
#define PMC_ANALOG_PMC_ANLG_ECO_1    ( ( PMC_ANALOG_BASEADDR ) + 0X00000104 )

#define PMC_ANALOG_PMC_ANLG_ECO_1_ECO_SHIFT   0
#define PMC_ANALOG_PMC_ANLG_ECO_1_ECO_WIDTH   32
#define PMC_ANALOG_PMC_ANLG_ECO_1_ECO_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_TEST_FPD_ISO_LATCH
 */
#define PMC_ANALOG_TEST_FPD_ISO_LATCH    ( ( PMC_ANALOG_BASEADDR ) + 0X00000200 )

#define PMC_ANALOG_TEST_FPD_ISO_LATCH_ENABLE_SHIFT   0
#define PMC_ANALOG_TEST_FPD_ISO_LATCH_ENABLE_WIDTH   1
#define PMC_ANALOG_TEST_FPD_ISO_LATCH_ENABLE_MASK    0X00000001

/**
 * Register: PMC_ANALOG_TEST_IOU_MODE_IS_DFT
 */
#define PMC_ANALOG_TEST_IOU_MODE_IS_DFT    ( ( PMC_ANALOG_BASEADDR ) + 0X00000204 )

#define PMC_ANALOG_TEST_IOU_MODE_IS_DFT_DISABLE_SHIFT   0
#define PMC_ANALOG_TEST_IOU_MODE_IS_DFT_DISABLE_WIDTH   1
#define PMC_ANALOG_TEST_IOU_MODE_IS_DFT_DISABLE_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BNK3_EN_RX
 */
#define PMC_ANALOG_BNK3_EN_RX    ( ( PMC_ANALOG_BASEADDR ) + 0X00010000 )

#define PMC_ANALOG_BNK3_EN_RX_BNK3_EN_RX_SHIFT   0
#define PMC_ANALOG_BNK3_EN_RX_BNK3_EN_RX_WIDTH   13
#define PMC_ANALOG_BNK3_EN_RX_BNK3_EN_RX_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_SEL_RX
 */
#define PMC_ANALOG_BNK3_SEL_RX    ( ( PMC_ANALOG_BASEADDR ) + 0X00010004 )

#define PMC_ANALOG_BNK3_SEL_RX_BNK3_SEL_RX_SHIFT   0
#define PMC_ANALOG_BNK3_SEL_RX_BNK3_SEL_RX_WIDTH   26
#define PMC_ANALOG_BNK3_SEL_RX_BNK3_SEL_RX_MASK    0X03FFFFFF

/**
 * Register: PMC_ANALOG_BNK3_EN_RX_SCHMITT_HYST
 */
#define PMC_ANALOG_BNK3_EN_RX_SCHMITT_HYST    ( ( PMC_ANALOG_BASEADDR ) + 0X00010008 )

#define PMC_ANALOG_BNK3_EN_RX_SCHMITT_HYST_BNK3_EN_RX_SCHMITT_HYST_SHIFT   0
#define PMC_ANALOG_BNK3_EN_RX_SCHMITT_HYST_BNK3_EN_RX_SCHMITT_HYST_WIDTH   13
#define PMC_ANALOG_BNK3_EN_RX_SCHMITT_HYST_BNK3_EN_RX_SCHMITT_HYST_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_EN_WK_PD
 */
#define PMC_ANALOG_BNK3_EN_WK_PD    ( ( PMC_ANALOG_BASEADDR ) + 0X0001000C )

#define PMC_ANALOG_BNK3_EN_WK_PD_BNK3_EN_WK_PD_SHIFT   0
#define PMC_ANALOG_BNK3_EN_WK_PD_BNK3_EN_WK_PD_WIDTH   13
#define PMC_ANALOG_BNK3_EN_WK_PD_BNK3_EN_WK_PD_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_EN_WK_PU
 */
#define PMC_ANALOG_BNK3_EN_WK_PU    ( ( PMC_ANALOG_BASEADDR ) + 0X00010010 )

#define PMC_ANALOG_BNK3_EN_WK_PU_BNK3_EN_WK_PU_SHIFT   0
#define PMC_ANALOG_BNK3_EN_WK_PU_BNK3_EN_WK_PU_WIDTH   13
#define PMC_ANALOG_BNK3_EN_WK_PU_BNK3_EN_WK_PU_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_SEL_DRV
 */
#define PMC_ANALOG_BNK3_SEL_DRV    ( ( PMC_ANALOG_BASEADDR ) + 0X00010014 )

#define PMC_ANALOG_BNK3_SEL_DRV_BNK3_SEL_DRV_SHIFT   0
#define PMC_ANALOG_BNK3_SEL_DRV_BNK3_SEL_DRV_WIDTH   26
#define PMC_ANALOG_BNK3_SEL_DRV_BNK3_SEL_DRV_MASK    0X03FFFFFF

/**
 * Register: PMC_ANALOG_BNK3_SEL_SLEW
 */
#define PMC_ANALOG_BNK3_SEL_SLEW    ( ( PMC_ANALOG_BASEADDR ) + 0X00010018 )

#define PMC_ANALOG_BNK3_SEL_SLEW_BNK3_SEL_SLEW_SHIFT   0
#define PMC_ANALOG_BNK3_SEL_SLEW_BNK3_SEL_SLEW_WIDTH   13
#define PMC_ANALOG_BNK3_SEL_SLEW_BNK3_SEL_SLEW_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_EN_DFT_OPT_INV
 */
#define PMC_ANALOG_BNK3_EN_DFT_OPT_INV    ( ( PMC_ANALOG_BASEADDR ) + 0X0001001C )

#define PMC_ANALOG_BNK3_EN_DFT_OPT_INV_BNK3_EN_DFT_OPT_INV_SHIFT   0
#define PMC_ANALOG_BNK3_EN_DFT_OPT_INV_BNK3_EN_DFT_OPT_INV_WIDTH   13
#define PMC_ANALOG_BNK3_EN_DFT_OPT_INV_BNK3_EN_DFT_OPT_INV_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_EN_PAD2PAD_LOOPBACK
 */
#define PMC_ANALOG_BNK3_EN_PAD2PAD_LOOPBACK    ( ( PMC_ANALOG_BASEADDR ) + 0X00010020 )

#define PMC_ANALOG_BNK3_EN_PAD2PAD_LOOPBACK_BNK3_EN_PAD2PAD_LOOPBACK_SHIFT   0
#define PMC_ANALOG_BNK3_EN_PAD2PAD_LOOPBACK_BNK3_EN_PAD2PAD_LOOPBACK_WIDTH   13
#define PMC_ANALOG_BNK3_EN_PAD2PAD_LOOPBACK_BNK3_EN_PAD2PAD_LOOPBACK_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_RX_SPARE
 */
#define PMC_ANALOG_BNK3_RX_SPARE    ( ( PMC_ANALOG_BASEADDR ) + 0X00010024 )

#define PMC_ANALOG_BNK3_RX_SPARE_BNK3_RX_SPARE_SHIFT   0
#define PMC_ANALOG_BNK3_RX_SPARE_BNK3_RX_SPARE_WIDTH   26
#define PMC_ANALOG_BNK3_RX_SPARE_BNK3_RX_SPARE_MASK    0X03FFFFFF

/**
 * Register: PMC_ANALOG_BNK3_TX_SPARE
 */
#define PMC_ANALOG_BNK3_TX_SPARE    ( ( PMC_ANALOG_BASEADDR ) + 0X00010028 )

#define PMC_ANALOG_BNK3_TX_SPARE_BNK3_TX_SPARE_SHIFT   0
#define PMC_ANALOG_BNK3_TX_SPARE_BNK3_TX_SPARE_WIDTH   26
#define PMC_ANALOG_BNK3_TX_SPARE_BNK3_TX_SPARE_MASK    0X03FFFFFF

/**
 * Register: PMC_ANALOG_BNK3_SEL_EN1P8
 */
#define PMC_ANALOG_BNK3_SEL_EN1P8    ( ( PMC_ANALOG_BASEADDR ) + 0X0001002C )

#define PMC_ANALOG_BNK3_SEL_EN1P8_BNK3_SEL_EN1P8_SHIFT   0
#define PMC_ANALOG_BNK3_SEL_EN1P8_BNK3_SEL_EN1P8_WIDTH   1
#define PMC_ANALOG_BNK3_SEL_EN1P8_BNK3_SEL_EN1P8_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BNK3_EN_B_POR_DETECT
 */
#define PMC_ANALOG_BNK3_EN_B_POR_DETECT    ( ( PMC_ANALOG_BASEADDR ) + 0X00010030 )

#define PMC_ANALOG_BNK3_EN_B_POR_DETECT_BNK3_EN_B_POR_DETECT_SHIFT   0
#define PMC_ANALOG_BNK3_EN_B_POR_DETECT_BNK3_EN_B_POR_DETECT_WIDTH   1
#define PMC_ANALOG_BNK3_EN_B_POR_DETECT_BNK3_EN_B_POR_DETECT_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BNK3_LPF_BYP_POR_DETECT
 */
#define PMC_ANALOG_BNK3_LPF_BYP_POR_DETECT    ( ( PMC_ANALOG_BASEADDR ) + 0X00010034 )

#define PMC_ANALOG_BNK3_LPF_BYP_POR_DETECT_BNK3_LPF_BYP_POR_DETECT_SHIFT   0
#define PMC_ANALOG_BNK3_LPF_BYP_POR_DETECT_BNK3_LPF_BYP_POR_DETECT_WIDTH   1
#define PMC_ANALOG_BNK3_LPF_BYP_POR_DETECT_BNK3_LPF_BYP_POR_DETECT_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BNK3_EN_LATCH
 */
#define PMC_ANALOG_BNK3_EN_LATCH    ( ( PMC_ANALOG_BASEADDR ) + 0X00010038 )

#define PMC_ANALOG_BNK3_EN_LATCH_BNK3_EN_LATCH_SHIFT   0
#define PMC_ANALOG_BNK3_EN_LATCH_BNK3_EN_LATCH_WIDTH   1
#define PMC_ANALOG_BNK3_EN_LATCH_BNK3_EN_LATCH_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BNK3_VBG_LPF_BYP_B
 */
#define PMC_ANALOG_BNK3_VBG_LPF_BYP_B    ( ( PMC_ANALOG_BASEADDR ) + 0X0001003C )

#define PMC_ANALOG_BNK3_VBG_LPF_BYP_B_BNK3_VBG_LPF_BYP_B_SHIFT   0
#define PMC_ANALOG_BNK3_VBG_LPF_BYP_B_BNK3_VBG_LPF_BYP_B_WIDTH   1
#define PMC_ANALOG_BNK3_VBG_LPF_BYP_B_BNK3_VBG_LPF_BYP_B_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BNK3_EN_AMP_B
 */
#define PMC_ANALOG_BNK3_EN_AMP_B    ( ( PMC_ANALOG_BASEADDR ) + 0X00010040 )

#define PMC_ANALOG_BNK3_EN_AMP_B_BNK3_EN_AMP_B_SHIFT   0
#define PMC_ANALOG_BNK3_EN_AMP_B_BNK3_EN_AMP_B_WIDTH   2
#define PMC_ANALOG_BNK3_EN_AMP_B_BNK3_EN_AMP_B_MASK    0X00000003

/**
 * Register: PMC_ANALOG_BNK3_SPARE_BIAS
 */
#define PMC_ANALOG_BNK3_SPARE_BIAS    ( ( PMC_ANALOG_BASEADDR ) + 0X00010044 )

#define PMC_ANALOG_BNK3_SPARE_BIAS_BNK3_SPARE_BIAS_SHIFT   0
#define PMC_ANALOG_BNK3_SPARE_BIAS_BNK3_SPARE_BIAS_WIDTH   4
#define PMC_ANALOG_BNK3_SPARE_BIAS_BNK3_SPARE_BIAS_MASK    0X0000000F

/**
 * Register: PMC_ANALOG_BNK3_DRIVER_BIAS
 */
#define PMC_ANALOG_BNK3_DRIVER_BIAS    ( ( PMC_ANALOG_BASEADDR ) + 0X00010048 )

#define PMC_ANALOG_BNK3_DRIVER_BIAS_BNK3_DRIVER_BIAS_SHIFT   0
#define PMC_ANALOG_BNK3_DRIVER_BIAS_BNK3_DRIVER_BIAS_WIDTH   15
#define PMC_ANALOG_BNK3_DRIVER_BIAS_BNK3_DRIVER_BIAS_MASK    0X00007FFF

/**
 * Register: PMC_ANALOG_BNK3_VMODE
 */
#define PMC_ANALOG_BNK3_VMODE    ( ( PMC_ANALOG_BASEADDR ) + 0X0001004C )

#define PMC_ANALOG_BNK3_VMODE_BNK3_VMODE_SHIFT   0
#define PMC_ANALOG_BNK3_VMODE_BNK3_VMODE_WIDTH   1
#define PMC_ANALOG_BNK3_VMODE_BNK3_VMODE_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BNK3_SEL_AUX_IO_RX
 */
#define PMC_ANALOG_BNK3_SEL_AUX_IO_RX    ( ( PMC_ANALOG_BASEADDR ) + 0X00010050 )

#define PMC_ANALOG_BNK3_SEL_AUX_IO_RX_BNK3_SEL_AUX_IO_RX_SHIFT   0
#define PMC_ANALOG_BNK3_SEL_AUX_IO_RX_BNK3_SEL_AUX_IO_RX_WIDTH   13
#define PMC_ANALOG_BNK3_SEL_AUX_IO_RX_BNK3_SEL_AUX_IO_RX_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_BNK3_EN_TX_HS_MODE
 */
#define PMC_ANALOG_BNK3_EN_TX_HS_MODE    ( ( PMC_ANALOG_BASEADDR ) + 0X00010054 )

#define PMC_ANALOG_BNK3_EN_TX_HS_MODE_BNK3_EN_TX_HS_MODE_SHIFT   0
#define PMC_ANALOG_BNK3_EN_TX_HS_MODE_BNK3_EN_TX_HS_MODE_WIDTH   13
#define PMC_ANALOG_BNK3_EN_TX_HS_MODE_BNK3_EN_TX_HS_MODE_MASK    0X00001FFF

/**
 * Register: PMC_ANALOG_MEMCFG_RF2PHS
 */
#define PMC_ANALOG_MEMCFG_RF2PHS    ( ( PMC_ANALOG_BASEADDR ) + 0X00010100 )

#define PMC_ANALOG_MEMCFG_RF2PHS_STOV_SHIFT   7
#define PMC_ANALOG_MEMCFG_RF2PHS_STOV_WIDTH   1
#define PMC_ANALOG_MEMCFG_RF2PHS_STOV_MASK    0X00000080

#define PMC_ANALOG_MEMCFG_RF2PHS_EMASA_SHIFT   6
#define PMC_ANALOG_MEMCFG_RF2PHS_EMASA_WIDTH   1
#define PMC_ANALOG_MEMCFG_RF2PHS_EMASA_MASK    0X00000040

#define PMC_ANALOG_MEMCFG_RF2PHS_EMAB_SHIFT   3
#define PMC_ANALOG_MEMCFG_RF2PHS_EMAB_WIDTH   3
#define PMC_ANALOG_MEMCFG_RF2PHS_EMAB_MASK    0X00000038

#define PMC_ANALOG_MEMCFG_RF2PHS_EMAA_SHIFT   0
#define PMC_ANALOG_MEMCFG_RF2PHS_EMAA_WIDTH   3
#define PMC_ANALOG_MEMCFG_RF2PHS_EMAA_MASK    0X00000007

/**
 * Register: PMC_ANALOG_MEMCFG_RFSPHD
 */
#define PMC_ANALOG_MEMCFG_RFSPHD    ( ( PMC_ANALOG_BASEADDR ) + 0X00010104 )

#define PMC_ANALOG_MEMCFG_RFSPHD_STOV_SHIFT   6
#define PMC_ANALOG_MEMCFG_RFSPHD_STOV_WIDTH   1
#define PMC_ANALOG_MEMCFG_RFSPHD_STOV_MASK    0X00000040

#define PMC_ANALOG_MEMCFG_RFSPHD_EMAS_SHIFT   5
#define PMC_ANALOG_MEMCFG_RFSPHD_EMAS_WIDTH   1
#define PMC_ANALOG_MEMCFG_RFSPHD_EMAS_MASK    0X00000020

#define PMC_ANALOG_MEMCFG_RFSPHD_EMAW_SHIFT   3
#define PMC_ANALOG_MEMCFG_RFSPHD_EMAW_WIDTH   2
#define PMC_ANALOG_MEMCFG_RFSPHD_EMAW_MASK    0X00000018

#define PMC_ANALOG_MEMCFG_RFSPHD_EMA_SHIFT   0
#define PMC_ANALOG_MEMCFG_RFSPHD_EMA_WIDTH   3
#define PMC_ANALOG_MEMCFG_RFSPHD_EMA_MASK    0X00000007

/**
 * Register: PMC_ANALOG_MEMCFG_SRSPHD
 */
#define PMC_ANALOG_MEMCFG_SRSPHD    ( ( PMC_ANALOG_BASEADDR ) + 0X00010108 )

#define PMC_ANALOG_MEMCFG_SRSPHD_STOV_SHIFT   6
#define PMC_ANALOG_MEMCFG_SRSPHD_STOV_WIDTH   1
#define PMC_ANALOG_MEMCFG_SRSPHD_STOV_MASK    0X00000040

#define PMC_ANALOG_MEMCFG_SRSPHD_EMAS_SHIFT   5
#define PMC_ANALOG_MEMCFG_SRSPHD_EMAS_WIDTH   1
#define PMC_ANALOG_MEMCFG_SRSPHD_EMAS_MASK    0X00000020

#define PMC_ANALOG_MEMCFG_SRSPHD_EMAW_SHIFT   3
#define PMC_ANALOG_MEMCFG_SRSPHD_EMAW_WIDTH   2
#define PMC_ANALOG_MEMCFG_SRSPHD_EMAW_MASK    0X00000018

#define PMC_ANALOG_MEMCFG_SRSPHD_EMA_SHIFT   0
#define PMC_ANALOG_MEMCFG_SRSPHD_EMA_WIDTH   3
#define PMC_ANALOG_MEMCFG_SRSPHD_EMA_MASK    0X00000007

/**
 * Register: PMC_ANALOG_MEMCFG_ROM
 */
#define PMC_ANALOG_MEMCFG_ROM    ( ( PMC_ANALOG_BASEADDR ) + 0X0001010C )

#define PMC_ANALOG_MEMCFG_ROM_STOV_SHIFT   4
#define PMC_ANALOG_MEMCFG_ROM_STOV_WIDTH   1
#define PMC_ANALOG_MEMCFG_ROM_STOV_MASK    0X00000010

#define PMC_ANALOG_MEMCFG_ROM_KEN_SHIFT   3
#define PMC_ANALOG_MEMCFG_ROM_KEN_WIDTH   1
#define PMC_ANALOG_MEMCFG_ROM_KEN_MASK    0X00000008

#define PMC_ANALOG_MEMCFG_ROM_EMA_SHIFT   0
#define PMC_ANALOG_MEMCFG_ROM_EMA_WIDTH   3
#define PMC_ANALOG_MEMCFG_ROM_EMA_MASK    0X00000007

/**
 * Register: PMC_ANALOG_XPD_PRE_LOAD
 */
#define PMC_ANALOG_XPD_PRE_LOAD    ( ( PMC_ANALOG_BASEADDR ) + 0X00010200 )

#define PMC_ANALOG_XPD_PRE_LOAD_PRE_LOAD_SHIFT   0
#define PMC_ANALOG_XPD_PRE_LOAD_PRE_LOAD_WIDTH   32
#define PMC_ANALOG_XPD_PRE_LOAD_PRE_LOAD_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_XPD_EXPECTED
 */
#define PMC_ANALOG_XPD_EXPECTED    ( ( PMC_ANALOG_BASEADDR ) + 0X00010204 )

#define PMC_ANALOG_XPD_EXPECTED_EXPECTED_SHIFT   0
#define PMC_ANALOG_XPD_EXPECTED_EXPECTED_WIDTH   32
#define PMC_ANALOG_XPD_EXPECTED_EXPECTED_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_XPD_CTRL0
 */
#define PMC_ANALOG_XPD_CTRL0    ( ( PMC_ANALOG_BASEADDR ) + 0X00010208 )

#define PMC_ANALOG_XPD_CTRL0_DELAY_SPARE_SHIFT   25
#define PMC_ANALOG_XPD_CTRL0_DELAY_SPARE_WIDTH   5
#define PMC_ANALOG_XPD_CTRL0_DELAY_SPARE_MASK    0X3E000000

#define PMC_ANALOG_XPD_CTRL0_CMP_SEL_SHIFT   24
#define PMC_ANALOG_XPD_CTRL0_CMP_SEL_WIDTH   1
#define PMC_ANALOG_XPD_CTRL0_CMP_SEL_MASK    0X01000000

#define PMC_ANALOG_XPD_CTRL0_DELAY_CELL_TYPE_SHIFT   19
#define PMC_ANALOG_XPD_CTRL0_DELAY_CELL_TYPE_WIDTH   5
#define PMC_ANALOG_XPD_CTRL0_DELAY_CELL_TYPE_MASK    0X00F80000

#define PMC_ANALOG_XPD_CTRL0_DELAY_VT_TYPE_SHIFT   17
#define PMC_ANALOG_XPD_CTRL0_DELAY_VT_TYPE_WIDTH   2
#define PMC_ANALOG_XPD_CTRL0_DELAY_VT_TYPE_MASK    0X00060000

#define PMC_ANALOG_XPD_CTRL0_DELAY_VALUE_SHIFT   6
#define PMC_ANALOG_XPD_CTRL0_DELAY_VALUE_WIDTH   11
#define PMC_ANALOG_XPD_CTRL0_DELAY_VALUE_MASK    0X0001FFC0

#define PMC_ANALOG_XPD_CTRL0_PATH_SEL_SHIFT   0
#define PMC_ANALOG_XPD_CTRL0_PATH_SEL_WIDTH   6
#define PMC_ANALOG_XPD_CTRL0_PATH_SEL_MASK    0X0000003F

/**
 * Register: PMC_ANALOG_XPD_CTRL1
 */
#define PMC_ANALOG_XPD_CTRL1    ( ( PMC_ANALOG_BASEADDR ) + 0X0001020C )

#define PMC_ANALOG_XPD_CTRL1_CLK_SPARE_SHIFT   12
#define PMC_ANALOG_XPD_CTRL1_CLK_SPARE_WIDTH   4
#define PMC_ANALOG_XPD_CTRL1_CLK_SPARE_MASK    0X0000F000

#define PMC_ANALOG_XPD_CTRL1_CLK_PHASE_SEL_SHIFT   10
#define PMC_ANALOG_XPD_CTRL1_CLK_PHASE_SEL_WIDTH   2
#define PMC_ANALOG_XPD_CTRL1_CLK_PHASE_SEL_MASK    0X00000C00

#define PMC_ANALOG_XPD_CTRL1_CLK_VT_TYPE_SHIFT   8
#define PMC_ANALOG_XPD_CTRL1_CLK_VT_TYPE_WIDTH   2
#define PMC_ANALOG_XPD_CTRL1_CLK_VT_TYPE_MASK    0X00000300

#define PMC_ANALOG_XPD_CTRL1_CLK_CELL_TYPE_SHIFT   6
#define PMC_ANALOG_XPD_CTRL1_CLK_CELL_TYPE_WIDTH   2
#define PMC_ANALOG_XPD_CTRL1_CLK_CELL_TYPE_MASK    0X000000C0

#define PMC_ANALOG_XPD_CTRL1_CLK_INSERT_DLY_SHIFT   2
#define PMC_ANALOG_XPD_CTRL1_CLK_INSERT_DLY_WIDTH   4
#define PMC_ANALOG_XPD_CTRL1_CLK_INSERT_DLY_MASK    0X0000003C

#define PMC_ANALOG_XPD_CTRL1_CLK_SEL_SHIFT   0
#define PMC_ANALOG_XPD_CTRL1_CLK_SEL_WIDTH   2
#define PMC_ANALOG_XPD_CTRL1_CLK_SEL_MASK    0X00000003

/**
 * Register: PMC_ANALOG_XPD_CTRL2
 */
#define PMC_ANALOG_XPD_CTRL2    ( ( PMC_ANALOG_BASEADDR ) + 0X00010210 )

#define PMC_ANALOG_XPD_CTRL2_CTRL_SPARE_SHIFT   1
#define PMC_ANALOG_XPD_CTRL2_CTRL_SPARE_WIDTH   2
#define PMC_ANALOG_XPD_CTRL2_CTRL_SPARE_MASK    0X00000006

#define PMC_ANALOG_XPD_CTRL2_ENABLE_SHIFT   0
#define PMC_ANALOG_XPD_CTRL2_ENABLE_WIDTH   1
#define PMC_ANALOG_XPD_CTRL2_ENABLE_MASK    0X00000001

/**
 * Register: PMC_ANALOG_XPD_CTRL3
 */
#define PMC_ANALOG_XPD_CTRL3    ( ( PMC_ANALOG_BASEADDR ) + 0X00010214 )

#define PMC_ANALOG_XPD_CTRL3_DCYCLE_CNT_VALUE_SHIFT   3
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_CNT_VALUE_WIDTH   12
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_CNT_VALUE_MASK    0X00007FF8

#define PMC_ANALOG_XPD_CTRL3_DCYCLE_HIGH_LOW_SHIFT   2
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_HIGH_LOW_WIDTH   1
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_HIGH_LOW_MASK    0X00000004

#define PMC_ANALOG_XPD_CTRL3_DCYCLE_CNT_CLR_SHIFT   1
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_CNT_CLR_WIDTH   1
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_CNT_CLR_MASK    0X00000002

#define PMC_ANALOG_XPD_CTRL3_DCYCLE_START_SHIFT   0
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_START_WIDTH   1
#define PMC_ANALOG_XPD_CTRL3_DCYCLE_START_MASK    0X00000001

/**
 * Register: PMC_ANALOG_XPD_SOFT_RST
 */
#define PMC_ANALOG_XPD_SOFT_RST    ( ( PMC_ANALOG_BASEADDR ) + 0X00010218 )

#define PMC_ANALOG_XPD_SOFT_RST_CLK0_SHIFT   0
#define PMC_ANALOG_XPD_SOFT_RST_CLK0_WIDTH   1
#define PMC_ANALOG_XPD_SOFT_RST_CLK0_MASK    0X00000001

/**
 * Register: PMC_ANALOG_XPD_STAT
 */
#define PMC_ANALOG_XPD_STAT    ( ( PMC_ANALOG_BASEADDR ) + 0X0001021C )

#define PMC_ANALOG_XPD_STAT_CMP_RESULT_SHIFT   1
#define PMC_ANALOG_XPD_STAT_CMP_RESULT_WIDTH   1
#define PMC_ANALOG_XPD_STAT_CMP_RESULT_MASK    0X00000002

#define PMC_ANALOG_XPD_STAT_CMP_DONE_SHIFT   0
#define PMC_ANALOG_XPD_STAT_CMP_DONE_WIDTH   1
#define PMC_ANALOG_XPD_STAT_CMP_DONE_MASK    0X00000001

/**
 * Register: PMC_ANALOG_PMV_CTRL0
 */
#define PMC_ANALOG_PMV_CTRL0    ( ( PMC_ANALOG_BASEADDR ) + 0X00010300 )

#define PMC_ANALOG_PMV_CTRL0_FLOP_SEL_INTIP_SHIFT   9
#define PMC_ANALOG_PMV_CTRL0_FLOP_SEL_INTIP_WIDTH   4
#define PMC_ANALOG_PMV_CTRL0_FLOP_SEL_INTIP_MASK    0X00001E00

#define PMC_ANALOG_PMV_CTRL0_LATCH_SEL_INTIP_SHIFT   5
#define PMC_ANALOG_PMV_CTRL0_LATCH_SEL_INTIP_WIDTH   4
#define PMC_ANALOG_PMV_CTRL0_LATCH_SEL_INTIP_MASK    0X000001E0

#define PMC_ANALOG_PMV_CTRL0_OUTPUT_SEL_INTIP_SHIFT   1
#define PMC_ANALOG_PMV_CTRL0_OUTPUT_SEL_INTIP_WIDTH   4
#define PMC_ANALOG_PMV_CTRL0_OUTPUT_SEL_INTIP_MASK    0X0000001E

#define PMC_ANALOG_PMV_CTRL0_TOGGLE_SEL_INTIP_SHIFT   0
#define PMC_ANALOG_PMV_CTRL0_TOGGLE_SEL_INTIP_WIDTH   1
#define PMC_ANALOG_PMV_CTRL0_TOGGLE_SEL_INTIP_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BISR_CACHE_CTRL_0
 */
#define PMC_ANALOG_BISR_CACHE_CTRL_0    ( ( PMC_ANALOG_BASEADDR ) + 0X00020000 )

#define PMC_ANALOG_BISR_CACHE_CTRL_0_CLR_SHIFT   4
#define PMC_ANALOG_BISR_CACHE_CTRL_0_CLR_WIDTH   1
#define PMC_ANALOG_BISR_CACHE_CTRL_0_CLR_MASK    0X00000010

#define PMC_ANALOG_BISR_CACHE_CTRL_0_TRIGGER_SHIFT   0
#define PMC_ANALOG_BISR_CACHE_CTRL_0_TRIGGER_WIDTH   1
#define PMC_ANALOG_BISR_CACHE_CTRL_0_TRIGGER_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BISR_CACHE_CTRL_1
 */
#define PMC_ANALOG_BISR_CACHE_CTRL_1    ( ( PMC_ANALOG_BASEADDR ) + 0X00020004 )

#define PMC_ANALOG_BISR_CACHE_CTRL_1_PGEN_0_SHIFT   0
#define PMC_ANALOG_BISR_CACHE_CTRL_1_PGEN_0_WIDTH   1
#define PMC_ANALOG_BISR_CACHE_CTRL_1_PGEN_0_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BISR_CACHE_STATUS
 */
#define PMC_ANALOG_BISR_CACHE_STATUS    ( ( PMC_ANALOG_BASEADDR ) + 0X00020008 )

#define PMC_ANALOG_BISR_CACHE_STATUS_PASS_SHIFT   1
#define PMC_ANALOG_BISR_CACHE_STATUS_PASS_WIDTH   1
#define PMC_ANALOG_BISR_CACHE_STATUS_PASS_MASK    0X00000002

#define PMC_ANALOG_BISR_CACHE_STATUS_DONE_SHIFT   0
#define PMC_ANALOG_BISR_CACHE_STATUS_DONE_WIDTH   1
#define PMC_ANALOG_BISR_CACHE_STATUS_DONE_MASK    0X00000001

/**
 * Register: PMC_ANALOG_BISR_CACHE_DATA_0
 */
#define PMC_ANALOG_BISR_CACHE_DATA_0    ( ( PMC_ANALOG_BASEADDR ) + 0X00020010 )

#define PMC_ANALOG_BISR_CACHE_DATA_0_DATA_SHIFT   0
#define PMC_ANALOG_BISR_CACHE_DATA_0_DATA_WIDTH   32
#define PMC_ANALOG_BISR_CACHE_DATA_0_DATA_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_BISR_CACHE_DATA_1
 */
#define PMC_ANALOG_BISR_CACHE_DATA_1    ( ( PMC_ANALOG_BASEADDR ) + 0X00020014 )

#define PMC_ANALOG_BISR_CACHE_DATA_1_DATA_SHIFT   0
#define PMC_ANALOG_BISR_CACHE_DATA_1_DATA_WIDTH   32
#define PMC_ANALOG_BISR_CACHE_DATA_1_DATA_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_BISR_TEST_DATA_0
 */
#define PMC_ANALOG_BISR_TEST_DATA_0    ( ( PMC_ANALOG_BASEADDR ) + 0X00020020 )

#define PMC_ANALOG_BISR_TEST_DATA_0_DATA_SHIFT   0
#define PMC_ANALOG_BISR_TEST_DATA_0_DATA_WIDTH   32
#define PMC_ANALOG_BISR_TEST_DATA_0_DATA_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_BISR_TEST_DATA_1
 */
#define PMC_ANALOG_BISR_TEST_DATA_1    ( ( PMC_ANALOG_BASEADDR ) + 0X00020024 )

#define PMC_ANALOG_BISR_TEST_DATA_1_DATA_SHIFT   0
#define PMC_ANALOG_BISR_TEST_DATA_1_DATA_WIDTH   32
#define PMC_ANALOG_BISR_TEST_DATA_1_DATA_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_OD_MBIST_RST
 */
#define PMC_ANALOG_OD_MBIST_RST    ( ( PMC_ANALOG_BASEADDR ) + 0X00020100 )

#define PMC_ANALOG_OD_MBIST_RST_LPD_IOU_SHIFT   6
#define PMC_ANALOG_OD_MBIST_RST_LPD_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_RST_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_OD_MBIST_RST_LPD_RPU_SHIFT   5
#define PMC_ANALOG_OD_MBIST_RST_LPD_RPU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_RST_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_OD_MBIST_RST_LPD_SHIFT   4
#define PMC_ANALOG_OD_MBIST_RST_LPD_WIDTH   1
#define PMC_ANALOG_OD_MBIST_RST_LPD_MASK    0X00000010

#define PMC_ANALOG_OD_MBIST_RST_PMC_IOU_SHIFT   1
#define PMC_ANALOG_OD_MBIST_RST_PMC_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_RST_PMC_IOU_MASK    0X00000002

#define PMC_ANALOG_OD_MBIST_RST_PMC_SHIFT   0
#define PMC_ANALOG_OD_MBIST_RST_PMC_WIDTH   1
#define PMC_ANALOG_OD_MBIST_RST_PMC_MASK    0X00000001

/**
 * Register: PMC_ANALOG_OD_MBIST_PG_EN
 */
#define PMC_ANALOG_OD_MBIST_PG_EN    ( ( PMC_ANALOG_BASEADDR ) + 0X00020104 )

#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_IOU_SHIFT   6
#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_RPU_SHIFT   5
#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_RPU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_SHIFT   4
#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_WIDTH   1
#define PMC_ANALOG_OD_MBIST_PG_EN_LPD_MASK    0X00000010

#define PMC_ANALOG_OD_MBIST_PG_EN_PMC_IOU_SHIFT   1
#define PMC_ANALOG_OD_MBIST_PG_EN_PMC_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_PG_EN_PMC_IOU_MASK    0X00000002

#define PMC_ANALOG_OD_MBIST_PG_EN_PMC_SHIFT   0
#define PMC_ANALOG_OD_MBIST_PG_EN_PMC_WIDTH   1
#define PMC_ANALOG_OD_MBIST_PG_EN_PMC_MASK    0X00000001

/**
 * Register: PMC_ANALOG_OD_MBIST_SETUP
 */
#define PMC_ANALOG_OD_MBIST_SETUP    ( ( PMC_ANALOG_BASEADDR ) + 0X00020108 )

#define PMC_ANALOG_OD_MBIST_SETUP_LPD_IOU_SHIFT   6
#define PMC_ANALOG_OD_MBIST_SETUP_LPD_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_SETUP_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_OD_MBIST_SETUP_LPD_RPU_SHIFT   5
#define PMC_ANALOG_OD_MBIST_SETUP_LPD_RPU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_SETUP_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_OD_MBIST_SETUP_LPD_SHIFT   4
#define PMC_ANALOG_OD_MBIST_SETUP_LPD_WIDTH   1
#define PMC_ANALOG_OD_MBIST_SETUP_LPD_MASK    0X00000010

#define PMC_ANALOG_OD_MBIST_SETUP_PMC_IOU_SHIFT   1
#define PMC_ANALOG_OD_MBIST_SETUP_PMC_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_SETUP_PMC_IOU_MASK    0X00000002

#define PMC_ANALOG_OD_MBIST_SETUP_PMC_SHIFT   0
#define PMC_ANALOG_OD_MBIST_SETUP_PMC_WIDTH   1
#define PMC_ANALOG_OD_MBIST_SETUP_PMC_MASK    0X00000001

/**
 * Register: PMC_ANALOG_MBIST_MODE
 */
#define PMC_ANALOG_MBIST_MODE    ( ( PMC_ANALOG_BASEADDR ) + 0X0002010C )

#define PMC_ANALOG_MBIST_MODE_PMC_IOU_SHIFT   1
#define PMC_ANALOG_MBIST_MODE_PMC_IOU_WIDTH   1
#define PMC_ANALOG_MBIST_MODE_PMC_IOU_MASK    0X00000002

/**
 * Register: PMC_ANALOG_OD_MBIST_DONE
 */
#define PMC_ANALOG_OD_MBIST_DONE    ( ( PMC_ANALOG_BASEADDR ) + 0X00020110 )

#define PMC_ANALOG_OD_MBIST_DONE_LPD_IOU_SHIFT   6
#define PMC_ANALOG_OD_MBIST_DONE_LPD_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_DONE_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_OD_MBIST_DONE_LPD_RPU_SHIFT   5
#define PMC_ANALOG_OD_MBIST_DONE_LPD_RPU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_DONE_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_OD_MBIST_DONE_LPD_SHIFT   4
#define PMC_ANALOG_OD_MBIST_DONE_LPD_WIDTH   1
#define PMC_ANALOG_OD_MBIST_DONE_LPD_MASK    0X00000010

#define PMC_ANALOG_OD_MBIST_DONE_PMC_IOU_SHIFT   1
#define PMC_ANALOG_OD_MBIST_DONE_PMC_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_DONE_PMC_IOU_MASK    0X00000002

#define PMC_ANALOG_OD_MBIST_DONE_PMC_SHIFT   0
#define PMC_ANALOG_OD_MBIST_DONE_PMC_WIDTH   1
#define PMC_ANALOG_OD_MBIST_DONE_PMC_MASK    0X00000001

/**
 * Register: PMC_ANALOG_OD_MBIST_GOOD
 */
#define PMC_ANALOG_OD_MBIST_GOOD    ( ( PMC_ANALOG_BASEADDR ) + 0X00020114 )

#define PMC_ANALOG_OD_MBIST_GOOD_LPD_IOU_SHIFT   6
#define PMC_ANALOG_OD_MBIST_GOOD_LPD_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_GOOD_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_OD_MBIST_GOOD_LPD_RPU_SHIFT   5
#define PMC_ANALOG_OD_MBIST_GOOD_LPD_RPU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_GOOD_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_OD_MBIST_GOOD_LPD_SHIFT   4
#define PMC_ANALOG_OD_MBIST_GOOD_LPD_WIDTH   1
#define PMC_ANALOG_OD_MBIST_GOOD_LPD_MASK    0X00000010

#define PMC_ANALOG_OD_MBIST_GOOD_PMC_IOU_SHIFT   1
#define PMC_ANALOG_OD_MBIST_GOOD_PMC_IOU_WIDTH   1
#define PMC_ANALOG_OD_MBIST_GOOD_PMC_IOU_MASK    0X00000002

#define PMC_ANALOG_OD_MBIST_GOOD_PMC_SHIFT   0
#define PMC_ANALOG_OD_MBIST_GOOD_PMC_WIDTH   1
#define PMC_ANALOG_OD_MBIST_GOOD_PMC_MASK    0X00000001

/**
 * Register: PMC_ANALOG_SCAN_CLEAR_TRIGGER
 */
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER    ( ( PMC_ANALOG_BASEADDR ) + 0X00020120 )

#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_NOC_SHIFT   8
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_NOC_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_NOC_MASK    0X00000100

#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_IOU_SHIFT   6
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_IOU_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_RPU_SHIFT   5
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_RPU_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_SHIFT   4
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_TRIGGER_LPD_MASK    0X00000010

/**
 * Register: PMC_ANALOG_SCAN_CLEAR_LOCK
 */
#define PMC_ANALOG_SCAN_CLEAR_LOCK    ( ( PMC_ANALOG_BASEADDR ) + 0X00020124 )

#define PMC_ANALOG_SCAN_CLEAR_LOCK_LOCK_SHIFT   0
#define PMC_ANALOG_SCAN_CLEAR_LOCK_LOCK_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_LOCK_LOCK_MASK    0X00000001

/**
 * Register: PMC_ANALOG_SCAN_CLEAR_DONE
 */
#define PMC_ANALOG_SCAN_CLEAR_DONE    ( ( PMC_ANALOG_BASEADDR ) + 0X00020128 )

#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_IOU_SHIFT   6
#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_IOU_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_RPU_SHIFT   5
#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_RPU_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_SHIFT   4
#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_DONE_LPD_MASK    0X00000010

#define PMC_ANALOG_SCAN_CLEAR_DONE_PMC_SHIFT   0
#define PMC_ANALOG_SCAN_CLEAR_DONE_PMC_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_DONE_PMC_MASK    0X00000001

/**
 * Register: PMC_ANALOG_SCAN_CLEAR_PASS
 */
#define PMC_ANALOG_SCAN_CLEAR_PASS    ( ( PMC_ANALOG_BASEADDR ) + 0X0002012C )

#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_IOU_SHIFT   6
#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_IOU_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_IOU_MASK    0X00000040

#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_RPU_SHIFT   5
#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_RPU_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_RPU_MASK    0X00000020

#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_SHIFT   4
#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_PASS_LPD_MASK    0X00000010

#define PMC_ANALOG_SCAN_CLEAR_PASS_PMC_SHIFT   0
#define PMC_ANALOG_SCAN_CLEAR_PASS_PMC_WIDTH   1
#define PMC_ANALOG_SCAN_CLEAR_PASS_PMC_MASK    0X00000001

/**
 * Register: PMC_ANALOG_LBIST_ENABLE
 */
#define PMC_ANALOG_LBIST_ENABLE    ( ( PMC_ANALOG_BASEADDR ) + 0X00020200 )

#define PMC_ANALOG_LBIST_ENABLE_LPD_RPU_SHIFT   1
#define PMC_ANALOG_LBIST_ENABLE_LPD_RPU_WIDTH   1
#define PMC_ANALOG_LBIST_ENABLE_LPD_RPU_MASK    0X00000002

#define PMC_ANALOG_LBIST_ENABLE_LPD_SHIFT   0
#define PMC_ANALOG_LBIST_ENABLE_LPD_WIDTH   1
#define PMC_ANALOG_LBIST_ENABLE_LPD_MASK    0X00000001

/**
 * Register: PMC_ANALOG_LBIST_RST_N
 */
#define PMC_ANALOG_LBIST_RST_N    ( ( PMC_ANALOG_BASEADDR ) + 0X00020204 )

#define PMC_ANALOG_LBIST_RST_N_LPD_RPU_SHIFT   1
#define PMC_ANALOG_LBIST_RST_N_LPD_RPU_WIDTH   1
#define PMC_ANALOG_LBIST_RST_N_LPD_RPU_MASK    0X00000002

#define PMC_ANALOG_LBIST_RST_N_LPD_SHIFT   0
#define PMC_ANALOG_LBIST_RST_N_LPD_WIDTH   1
#define PMC_ANALOG_LBIST_RST_N_LPD_MASK    0X00000001

/**
 * Register: PMC_ANALOG_LBIST_ISOLATION_EN
 */
#define PMC_ANALOG_LBIST_ISOLATION_EN    ( ( PMC_ANALOG_BASEADDR ) + 0X00020208 )

#define PMC_ANALOG_LBIST_ISOLATION_EN_LPD_RPU_SHIFT   1
#define PMC_ANALOG_LBIST_ISOLATION_EN_LPD_RPU_WIDTH   1
#define PMC_ANALOG_LBIST_ISOLATION_EN_LPD_RPU_MASK    0X00000002

#define PMC_ANALOG_LBIST_ISOLATION_EN_LPD_SHIFT   0
#define PMC_ANALOG_LBIST_ISOLATION_EN_LPD_WIDTH   1
#define PMC_ANALOG_LBIST_ISOLATION_EN_LPD_MASK    0X00000001

/**
 * Register: PMC_ANALOG_LBIST_LOCK
 */
#define PMC_ANALOG_LBIST_LOCK    ( ( PMC_ANALOG_BASEADDR ) + 0X0002020C )

#define PMC_ANALOG_LBIST_LOCK_LOCK_SHIFT   0
#define PMC_ANALOG_LBIST_LOCK_LOCK_WIDTH   1
#define PMC_ANALOG_LBIST_LOCK_LOCK_MASK    0X00000001

/**
 * Register: PMC_ANALOG_LBIST_DONE
 */
#define PMC_ANALOG_LBIST_DONE    ( ( PMC_ANALOG_BASEADDR ) + 0X00020210 )

#define PMC_ANALOG_LBIST_DONE_LPD_RPU_SHIFT   1
#define PMC_ANALOG_LBIST_DONE_LPD_RPU_WIDTH   1
#define PMC_ANALOG_LBIST_DONE_LPD_RPU_MASK    0X00000002

#define PMC_ANALOG_LBIST_DONE_LPD_SHIFT   0
#define PMC_ANALOG_LBIST_DONE_LPD_WIDTH   1
#define PMC_ANALOG_LBIST_DONE_LPD_MASK    0X00000001

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_0
 */
#define PMC_ANALOG_LBIST_LPD_MISR_0    ( ( PMC_ANALOG_BASEADDR ) + 0X00020214 )

#define PMC_ANALOG_LBIST_LPD_MISR_0_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_0_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_0_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_1
 */
#define PMC_ANALOG_LBIST_LPD_MISR_1    ( ( PMC_ANALOG_BASEADDR ) + 0X00020218 )

#define PMC_ANALOG_LBIST_LPD_MISR_1_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_1_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_1_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_2
 */
#define PMC_ANALOG_LBIST_LPD_MISR_2    ( ( PMC_ANALOG_BASEADDR ) + 0X0002021C )

#define PMC_ANALOG_LBIST_LPD_MISR_2_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_2_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_2_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_3
 */
#define PMC_ANALOG_LBIST_LPD_MISR_3    ( ( PMC_ANALOG_BASEADDR ) + 0X00020220 )

#define PMC_ANALOG_LBIST_LPD_MISR_3_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_3_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_3_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_4
 */
#define PMC_ANALOG_LBIST_LPD_MISR_4    ( ( PMC_ANALOG_BASEADDR ) + 0X00020224 )

#define PMC_ANALOG_LBIST_LPD_MISR_4_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_4_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_4_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_5
 */
#define PMC_ANALOG_LBIST_LPD_MISR_5    ( ( PMC_ANALOG_BASEADDR ) + 0X00020228 )

#define PMC_ANALOG_LBIST_LPD_MISR_5_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_5_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_5_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_6
 */
#define PMC_ANALOG_LBIST_LPD_MISR_6    ( ( PMC_ANALOG_BASEADDR ) + 0X0002022C )

#define PMC_ANALOG_LBIST_LPD_MISR_6_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_6_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_6_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_7
 */
#define PMC_ANALOG_LBIST_LPD_MISR_7    ( ( PMC_ANALOG_BASEADDR ) + 0X00020230 )

#define PMC_ANALOG_LBIST_LPD_MISR_7_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_7_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_7_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_8
 */
#define PMC_ANALOG_LBIST_LPD_MISR_8    ( ( PMC_ANALOG_BASEADDR ) + 0X00020234 )

#define PMC_ANALOG_LBIST_LPD_MISR_8_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_8_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_8_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_9
 */
#define PMC_ANALOG_LBIST_LPD_MISR_9    ( ( PMC_ANALOG_BASEADDR ) + 0X00020238 )

#define PMC_ANALOG_LBIST_LPD_MISR_9_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_9_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_9_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_10
 */
#define PMC_ANALOG_LBIST_LPD_MISR_10    ( ( PMC_ANALOG_BASEADDR ) + 0X0002023C )

#define PMC_ANALOG_LBIST_LPD_MISR_10_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_10_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_10_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_11
 */
#define PMC_ANALOG_LBIST_LPD_MISR_11    ( ( PMC_ANALOG_BASEADDR ) + 0X00020240 )

#define PMC_ANALOG_LBIST_LPD_MISR_11_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_11_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_11_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_12
 */
#define PMC_ANALOG_LBIST_LPD_MISR_12    ( ( PMC_ANALOG_BASEADDR ) + 0X00020244 )

#define PMC_ANALOG_LBIST_LPD_MISR_12_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_12_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_12_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_MISR_13
 */
#define PMC_ANALOG_LBIST_LPD_MISR_13    ( ( PMC_ANALOG_BASEADDR ) + 0X00020248 )

#define PMC_ANALOG_LBIST_LPD_MISR_13_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_MISR_13_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_MISR_13_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_RPU_MISR_0
 */
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_0    ( ( PMC_ANALOG_BASEADDR ) + 0X00020250 )

#define PMC_ANALOG_LBIST_LPD_RPU_MISR_0_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_0_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_0_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_RPU_MISR_1
 */
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_1    ( ( PMC_ANALOG_BASEADDR ) + 0X00020254 )

#define PMC_ANALOG_LBIST_LPD_RPU_MISR_1_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_1_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_1_MISR_MASK    0XFFFFFFFF

/**
 * Register: PMC_ANALOG_LBIST_LPD_RPU_MISR_2
 */
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_2    ( ( PMC_ANALOG_BASEADDR ) + 0X00020258 )

#define PMC_ANALOG_LBIST_LPD_RPU_MISR_2_MISR_SHIFT   0
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_2_MISR_WIDTH   32
#define PMC_ANALOG_LBIST_LPD_RPU_MISR_2_MISR_MASK    0XFFFFFFFF

#ifdef __cplusplus
}
#endif


#endif /* _PMC_ANALOG_H_ */
