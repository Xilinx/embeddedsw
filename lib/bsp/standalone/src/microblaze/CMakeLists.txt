# Copyright (c) 2023-2024 Advanced Micro Devices, Inc. All Rights Reserved.
# SPDX-License-Identifier: MIT
collect (PROJECT_LIB_SOURCES errno.c)
collect (PROJECT_LIB_SOURCES _exit.c)
collect (PROJECT_LIB_SOURCES fcntl.c)
collect (PROJECT_LIB_SOURCES microblaze_exception_handler.c)
collect (PROJECT_LIB_SOURCES microblaze_interrupts_g.c)
collect (PROJECT_LIB_SOURCES pvr.c)
collect (PROJECT_LIB_SOURCES xio.c)
collect (PROJECT_LIB_SOURCES xil_exception.c)
collect (PROJECT_LIB_SOURCES xil_misc_psreset_api.c)
collect (PROJECT_LIB_SOURCES hw_exception_handler.S)
collect (PROJECT_LIB_HEADERS fsl.h)
collect (PROJECT_LIB_HEADERS mb_interface.h)
collect (PROJECT_LIB_HEADERS microblaze_exceptions_g.h)
collect (PROJECT_LIB_HEADERS microblaze_exceptions_i.h)
collect (PROJECT_LIB_HEADERS microblaze_interrupts_i.h)
collect (PROJECT_LIB_HEADERS pvr.h)
collect (PROJECT_LIB_HEADERS xio.h)
collect (PROJECT_LIB_HEADERS xil_exception.h)
collect(PROJECT_LIB_HEADERS xil_misc_psreset_api.h)
collect(PROJECT_LIB_HEADERS mb_interface.h)
collect(PROJECT_LIB_HEADERS microblaze_instructions.h)
collect(PROJECT_LIB_HEADERS xmicroblaze.h)
collect(PROJECT_LIB_HEADERS xmicroblaze_config.h)
collect (PROJECT_LIB_SOURCES xil_cache.c)
collect (PROJECT_LIB_SOURCES microblaze_scrub.S)
collect(PROJECT_LIB_HEADERS xil_cache.h)
if ((NOT "${CMAKE_SYSTEM_NAME}" STREQUAL "FreeRTOS") AND
    ("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "microblaze"))
    string(FIND "${CMAKE_C_FLAGS}" "-flto" has_flto)
    if (${has_flto} EQUAL -1)
	collect (PROJECT_LIB_SOURCES microblaze_interrupt_handler.c)
    endif()
endif()
